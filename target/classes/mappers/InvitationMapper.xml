<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pipigrp.pipidemo.dao.InvitationMapper">
  <resultMap id="BaseResultMap" type="pipigrp.pipidemo.pojo.Invitation">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pp_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="text" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="picturepath" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="videopath" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="time" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="num_like" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="num_dislike" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="num_comment" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="num_transport" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_send" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="check_state" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, pp_id, text, picturepath, videopath, time, num_like, num_dislike, num_comment, 
    num_transport, is_send, check_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from invitation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from invitation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="pipigrp.pipidemo.pojo.Invitation">
    insert into invitation (id, pp_id, text, 
      picturepath, videopath, time, 
      num_like, num_dislike, num_comment, 
      num_transport, is_send, check_state
      )
    values (#{id,jdbcType=VARCHAR}, #{ppId,jdbcType=VARCHAR}, #{text,jdbcType=CHAR}, 
      #{picturepath,jdbcType=CHAR}, #{videopath,jdbcType=CHAR}, #{time,jdbcType=CHAR}, 
      #{numLike,jdbcType=INTEGER}, #{numDislike,jdbcType=INTEGER}, #{numComment,jdbcType=INTEGER}, 
      #{numTransport,jdbcType=INTEGER}, #{isSend,jdbcType=INTEGER}, #{checkState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="pipigrp.pipidemo.pojo.Invitation">
    insert into invitation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ppId != null">
        pp_id,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="picturepath != null">
        picturepath,
      </if>
      <if test="videopath != null">
        videopath,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="numLike != null">
        num_like,
      </if>
      <if test="numDislike != null">
        num_dislike,
      </if>
      <if test="numComment != null">
        num_comment,
      </if>
      <if test="numTransport != null">
        num_transport,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
      <if test="checkState != null">
        check_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="ppId != null">
        #{ppId,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=CHAR},
      </if>
      <if test="picturepath != null">
        #{picturepath,jdbcType=CHAR},
      </if>
      <if test="videopath != null">
        #{videopath,jdbcType=CHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=CHAR},
      </if>
      <if test="numLike != null">
        #{numLike,jdbcType=INTEGER},
      </if>
      <if test="numDislike != null">
        #{numDislike,jdbcType=INTEGER},
      </if>
      <if test="numComment != null">
        #{numComment,jdbcType=INTEGER},
      </if>
      <if test="numTransport != null">
        #{numTransport,jdbcType=INTEGER},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=INTEGER},
      </if>
      <if test="checkState != null">
        #{checkState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="pipigrp.pipidemo.pojo.Invitation">
    update invitation
    <set>
      <if test="ppId != null">
        pp_id = #{ppId,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=CHAR},
      </if>
      <if test="picturepath != null">
        picturepath = #{picturepath,jdbcType=CHAR},
      </if>
      <if test="videopath != null">
        videopath = #{videopath,jdbcType=CHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=CHAR},
      </if>
      <if test="numLike != null">
        num_like = #{numLike,jdbcType=INTEGER},
      </if>
      <if test="numDislike != null">
        num_dislike = #{numDislike,jdbcType=INTEGER},
      </if>
      <if test="numComment != null">
        num_comment = #{numComment,jdbcType=INTEGER},
      </if>
      <if test="numTransport != null">
        num_transport = #{numTransport,jdbcType=INTEGER},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=INTEGER},
      </if>
      <if test="checkState != null">
        check_state = #{checkState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="pipigrp.pipidemo.pojo.Invitation">
    update invitation
    set pp_id = #{ppId,jdbcType=VARCHAR},
      text = #{text,jdbcType=CHAR},
      picturepath = #{picturepath,jdbcType=CHAR},
      videopath = #{videopath,jdbcType=CHAR},
      time = #{time,jdbcType=CHAR},
      num_like = #{numLike,jdbcType=INTEGER},
      num_dislike = #{numDislike,jdbcType=INTEGER},
      num_comment = #{numComment,jdbcType=INTEGER},
      num_transport = #{numTransport,jdbcType=INTEGER},
      is_send = #{isSend,jdbcType=INTEGER},
      check_state = #{checkState,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>